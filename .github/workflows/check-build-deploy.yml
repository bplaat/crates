name: check-build-deploy

on:
  push:
    branches: [master]
  pull_request:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # MARK: Linux x86_64
  check-linux-x86_64:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Install Debian packages
        run: |
          sudo apt-get update
          sudo apt-get install -y libcunit1-dev libgtk-3-dev libwebkit2gtk-4.1-dev
      - uses: actions/cache@v4
        id: cache-rust-toolchain
        with:
          path: |
            ~/.cargo
            ~/.rustup
          key: linux-x86_64-rust-with-tools-toolchain
      - name: Install extra Rust tooling
        if: steps.cache-rust-toolchain.outputs.cache-hit != 'true'
        run: |
          rustup toolchain add nightly --component rustfmt
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall -y cargo-deny cargo-nextest
      - run: ./meta.sh check

  # MARK: Linux aarch64
  check-linux-aarch64:
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@v4
      - name: Install Debian packages
        run: |
          sudo apt-get update
          sudo apt-get install -y libcunit1-dev libgtk-3-dev libwebkit2gtk-4.1-dev
      - uses: actions/cache@v4
        id: cache-rust-toolchain
        with:
          path: |
            ~/.cargo
            ~/.rustup
          key: linux-aarch64-rust-with-tools-toolchain
      - name: Install extra Rust tooling
        if: steps.cache-rust-toolchain.outputs.cache-hit != 'true'
        run: |
          rustup toolchain add nightly --component rustfmt
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall -y cargo-deny cargo-nextest
      - run: ./meta.sh check

  # MARK: macOS aarch64
  check-macos-aarch64:
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4
      - name: Install brew packages
        run: |
          brew install cunit clang-format
      - uses: actions/cache@v4
        id: cache-rust-toolchain
        with:
          path: |
            ~/.cargo
            ~/.rustup
          key: macos-aarch64-rust-with-tools-toolchain
      - name: Install extra Rust tooling
        if: steps.cache-rust-toolchain.outputs.cache-hit != 'true'
        run: |
          rustup toolchain add nightly --component rustfmt
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall -y cargo-deny cargo-nextest
      - run: ./meta.sh check

  # MARK: Windows x86_64
  check-windows-x86_64:
    runs-on: windows-2025
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        id: cache-rust-toolchain
        with:
          path: |
            ~/.cargo
            ~/.rustup
          key: windows-x86_64-rust-with-tools-toolchain
      - name: Install extra Rust tooling
        if: steps.cache-rust-toolchain.outputs.cache-hit != 'true'
        run: |
          rustup toolchain add nightly --component rustfmt
          iex (iwr "https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.ps1").Content
          cargo binstall -y cargo-deny cargo-nextest
      - run: ./meta.sh check
        shell: bash

  # MARK: Windows aarch64
  check-windows-aarch64:
    runs-on: windows-11-arm
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        id: cache-rust-toolchain
        with:
          path: |
            ~/.cargo
            ~/.rustup
          key: windows-aarch64-rust-with-tools-toolchain
      - name: Install extra Rust tooling
        if: steps.cache-rust-toolchain.outputs.cache-hit != 'true'
        run: |
          rustup toolchain add nightly --component rustfmt
          iex (iwr "https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.ps1").Content
          cargo binstall -y cargo-deny cargo-nextest
      - run: ./meta.sh check
        shell: bash

  # MARK: Build deploy pages
  build-deploy-pages:
    runs-on: ubuntu-24.04
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs:
      - check-linux-x86_64
      - check-linux-aarch64
      - check-macos-aarch64
      - check-windows-x86_64
      - check-windows-aarch64
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
      - name: Install extra Rust tooling
        run: |
          rustup target add wasm32-unknown-unknown
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall -y wasm-bindgen-cli --version 0.2.104
      - name: Build pages
        run: ./meta.sh build-pages
      - name: Upload pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: './target/pages'
      - id: deployment
        name: Deploy pages
        uses: actions/deploy-pages@v4
